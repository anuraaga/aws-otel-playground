version: '3.8'
services:
  dynamodb:
    image: amazon/dynamodb-local
    command: -jar DynamoDBLocal.jar -inMemory -sharedDb
    ports:
      - '8000:8000'
  imds:
    image: amazon/amazon-ec2-metadata-mock:v1.5.0
    ports:
      - '1338:1338'
  dynamodb-table:
    image: amazon/aws-cli
    entrypoint: bash
    # Wait a few seconds for dynamodb-local to start before creating
    command: |
      -c "curl --retry 10 --retry-delay 5 --retry-max-time 100 --retry-connrefused http://dynamodb:8000 > /dev/null && \
        aws dynamodb create-table \
        --table-name scratch \
        --attribute-definitions AttributeName=id,AttributeType=S \
        --key-schema AttributeName=id,KeyType=HASH \
        --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
        --endpoint-url http://dynamodb:8000"
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_REGION=dummy
    depends_on:
      - dynamodb
  mysqldb:
    image: mysql:5.7
    environment:
      # Don't ever use such a simple password in prod! This is only for local testing.
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: appdb
    ports:
      - '3306:3306'
    volumes:
    - ./scripts/db:/docker-entrypoint-initdb.d
  cats-cache:
    image: redis:6
    ports:
      - '6379:6379'
  dogs-cache:
    image: redis:6
    ports:
      - '6380:6379'
  jaeger-server:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
  zipkin-server:
    image: openzipkin/zipkin-slim
    ports:
      - '9412:9411'
  otel:
    #build:
    #  context: ../opentelemetry-collector-contrib
    #  dockerfile: examples/tracing/Dockerfile
    image: otel/opentelemetry-collector-contrib-dev
    command: --config /config/collector-config.yml --log-level debug
    environment:
      #- AWS_ACCESS_KEY_ID
      #- AWS_SECRET_ACCESS_KEY
      - AWS_REGION
    ports:
      - '55680:55680'
    volumes:
      - ./otel:/config
      - ~/.aws:/.aws
    depends_on:
      - zipkin-server
      - jaeger-server
  xray:
    image: amazon/aws-xray-daemon:3.2.0
    command: -o
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
    ports:
      - '2000:2000/udp'
      - '2000:2000/tcp'
    volumes:
      - ~/.aws:/root/.aws
  backend:
    image: ghcr.io/anuraaga/otel-playground-backend
    environment:
      - OTEL_EXPORTER_OTLP_SPAN_ENDPOINT=otel:55680
      - AWS_XRAY_DAEMON_ADDRESS=xray:2000
    ports:
      - '8081:8081'
      - '8083:8083'
    depends_on:
      - imds
      - mysqldb
      - otel
      - xray
  backend-webflux:
    image: ghcr.io/anuraaga/otel-playground-backend-webflux
    environment:
      - OTEL_EXPORTER_OTLP_SPAN_ENDPOINT=otel:55680
      - IMDS_ENDPOINT=imds:1338
      - OTEL_AWS_IMDS_ENDPOINT_OVERRIDE=imds:1338
      - CATS_CACHE_ENDPOINT=cats-cache:6379
      - DOGS_CACHE_ENDPOINT=dogs-cache:6379
    ports:
      - '8082:8082'
    depends_on:
      - imds
      - mysqldb
      - otel
      - xray
  frontend:
    image: ghcr.io/anuraaga/otel-playground-frontend
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
      - HELLO_SERVICE_ENDPOINT=backend:8081
      - WEBFLUX_BACKEND_ENDPOINT=backend-webflux:8082
      - SPARK_BACKEND_ENDPOINT=backend:8083
      - IMDS_ENDPOINT=imds:1338
      - OTEL_EXPORTER_OTLP_SPAN_ENDPOINT=otel:55680
      - AWS_XRAY_DAEMON_ADDRESS=xray:2000
      - DYNAMODB_ENDPOINT=dynamodb:8000
      - CATS_CACHE_ENDPOINT=cats-cache:6379
      - DOGS_CACHE_ENDPOINT=dogs-cache:6379
      - OTEL_ENDPOINT_PEER_SERVICE_MAPPING=tvyfrruhxh.execute-api.us-east-1.amazonaws.com=hello-lambda-api,cats-cache:6379=cats-cache,dogs-cache:6379=dogs-cache,ecs-backend-2093777359.us-east-1.elb.amazonaws.com=ecs-backend,2ccd810c-fargate-backend-8661-784022251.us-east-1.elb.amazonaws.com=eks-backend
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/appdb
      - OTEL_AWS_IMDS_ENDPOINT_OVERRIDE=imds:1338
    ports:
      - '9080:9080'
    volumes:
      - ~/.aws:/root/.aws
    depends_on:
      - backend
      - dynamodb-table
      - imds
      - mysqldb
      - cats-cache
      - dogs-cache
      - otel
      - xray
  frontend_xray:
    image: ghcr.io/anuraaga/otel-playground-frontend
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
      - HELLO_SERVICE_ENDPOINT=backend:8081
      - WEBFLUX_BACKEND_ENDPOINT=backend-webflux:8082
      - SPARK_BACKEND_ENDPOINT=backend:8083
      - IMDS_ENDPOINT=imds:1338
      - OTEL_EXPORTER_OTLP_SPAN_ENDPOINT=otel:55680
      - AWS_XRAY_DAEMON_ADDRESS=xray:2000
      - DYNAMODB_ENDPOINT=dynamodb:8000
      - CATS_CACHE_ENDPOINT=cats-cache:6379
      - DOGS_CACHE_ENDPOINT=dogs-cache:6379
      - ENABLE_XRAY_SDK=true
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/appdb
      - OTEL_PROPAGATORS=tracecontext
      - SERVER_PORT=9081
      - OTEL_AWS_IMDS_ENDPOINT_OVERRIDE=imds:1338
    ports:
      - '9081:9081'
    volumes:
      - ~/.aws:/root/.aws
    depends_on:
      - backend
      - dynamodb-table
      - imds
      - mysqldb
      - cats-cache
      - dogs-cache
      - otel
      - xray
